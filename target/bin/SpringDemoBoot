#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------

#   Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
#   reserved.

BASEDIR=`dirname $0`/..
BASEDIR=`(cd "$BASEDIR"; pwd)`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/org/springframework/boot/spring-boot-starter/3.2.4/spring-boot-starter-3.2.4.jar:"$REPO"/org/springframework/boot/spring-boot/3.2.4/spring-boot-3.2.4.jar:"$REPO"/org/springframework/spring-context/6.1.5/spring-context-6.1.5.jar:"$REPO"/org/springframework/spring-aop/6.1.5/spring-aop-6.1.5.jar:"$REPO"/org/springframework/spring-beans/6.1.5/spring-beans-6.1.5.jar:"$REPO"/org/springframework/spring-expression/6.1.5/spring-expression-6.1.5.jar:"$REPO"/io/micrometer/micrometer-observation/1.12.4/micrometer-observation-1.12.4.jar:"$REPO"/io/micrometer/micrometer-commons/1.12.4/micrometer-commons-1.12.4.jar:"$REPO"/org/springframework/boot/spring-boot-autoconfigure/3.2.4/spring-boot-autoconfigure-3.2.4.jar:"$REPO"/org/springframework/boot/spring-boot-starter-logging/3.2.4/spring-boot-starter-logging-3.2.4.jar:"$REPO"/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:"$REPO"/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:"$REPO"/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:"$REPO"/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:"$REPO"/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:"$REPO"/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:"$REPO"/org/springframework/spring-core/6.1.5/spring-core-6.1.5.jar:"$REPO"/org/springframework/spring-jcl/6.1.5/spring-jcl-6.1.5.jar:"$REPO"/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:"$REPO"/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:"$REPO"/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:"$REPO"/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:"$REPO"/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:"$REPO"/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:"$REPO"/org/telegram/telegrambots/6.9.7.1/telegrambots-6.9.7.1.jar:"$REPO"/org/telegram/telegrambots-meta/6.9.7.1/telegrambots-meta-6.9.7.1.jar:"$REPO"/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:"$REPO"/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:"$REPO"/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:"$REPO"/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.15.4/jackson-jaxrs-json-provider-2.15.4.jar:"$REPO"/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.15.4/jackson-jaxrs-base-2.15.4.jar:"$REPO"/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.15.4/jackson-module-jaxb-annotations-2.15.4.jar:"$REPO"/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:"$REPO"/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:"$REPO"/org/glassfish/jersey/inject/jersey-hk2/3.1.5/jersey-hk2-3.1.5.jar:"$REPO"/org/glassfish/jersey/core/jersey-common/3.1.5/jersey-common-3.1.5.jar:"$REPO"/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:"$REPO"/org/glassfish/hk2/hk2-locator/3.0.5/hk2-locator-3.0.5.jar:"$REPO"/org/glassfish/hk2/external/aopalliance-repackaged/3.0.5/aopalliance-repackaged-3.0.5.jar:"$REPO"/org/glassfish/hk2/hk2-api/3.0.5/hk2-api-3.0.5.jar:"$REPO"/org/glassfish/hk2/hk2-utils/3.0.5/hk2-utils-3.0.5.jar:"$REPO"/org/javassist/javassist/3.29.2-GA/javassist-3.29.2-GA.jar:"$REPO"/org/glassfish/jersey/media/jersey-media-json-jackson/3.1.5/jersey-media-json-jackson-3.1.5.jar:"$REPO"/org/glassfish/jersey/ext/jersey-entity-filtering/3.1.5/jersey-entity-filtering-3.1.5.jar:"$REPO"/com/fasterxml/jackson/module/jackson-module-jakarta-xmlbind-annotations/2.15.4/jackson-module-jakarta-xmlbind-annotations-2.15.4.jar:"$REPO"/org/glassfish/jersey/containers/jersey-container-grizzly2-http/3.1.5/jersey-container-grizzly2-http-3.1.5.jar:"$REPO"/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:"$REPO"/org/glassfish/grizzly/grizzly-http-server/4.0.1/grizzly-http-server-4.0.1.jar:"$REPO"/org/glassfish/grizzly/grizzly-http/4.0.1/grizzly-http-4.0.1.jar:"$REPO"/org/glassfish/grizzly/grizzly-framework/4.0.1/grizzly-framework-4.0.1.jar:"$REPO"/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:"$REPO"/org/glassfish/jersey/core/jersey-server/3.1.5/jersey-server-3.1.5.jar:"$REPO"/org/glassfish/jersey/core/jersey-client/3.1.5/jersey-client-3.1.5.jar:"$REPO"/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:"$REPO"/org/apache/httpcomponents/httpclient/4.5.14/httpclient-4.5.14.jar:"$REPO"/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:"$REPO"/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:"$REPO"/commons-codec/commons-codec/1.16.1/commons-codec-1.16.1.jar:"$REPO"/org/apache/httpcomponents/httpmime/4.5.14/httpmime-4.5.14.jar:"$REPO"/commons-io/commons-io/2.15.1/commons-io-2.15.1.jar:"$REPO"/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:"$REPO"/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:"$REPO"/org/telegram/telegrambots-spring-boot-starter/6.7.0/telegrambots-spring-boot-starter-6.7.0.jar:"$REPO"/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:"$REPO"/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:"$REPO"/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"$REPO"/io/project/SpringDemoBoot/0.0.1-SNAPSHOT/SpringDemoBoot-0.0.1-SNAPSHOT.jar
EXTRA_JVM_ARGUMENTS=""

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS \
  $EXTRA_JVM_ARGUMENTS \
  -classpath "$CLASSPATH" \
  -Dapp.name="SpringDemoBoot" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dbasedir="$BASEDIR" \
  SpringBootTelegramApplication \
  "$@"
